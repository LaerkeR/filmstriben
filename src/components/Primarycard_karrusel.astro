---
import MovieCard from "../components/Moviecard.astro";
import filmdatabase from "../filmdatabase.json";

const { temaTitel } = Astro.props;

const temaFiltret = filmdatabase.filter(
  (film) => film.tema === temaTitel || film.tema.includes(temaTitel)
);
---

<section class="carouselwrapper relative z-0 w-full px-20">
  <div class="align-bottom mb-4">
    <h2 class="text-xs font-robotoHeader tracking-wider text-grey-100">
      {temaTitel}
    </h2>
    <div class="carousel-indicators flex justify-end gap-2">
      <div class="indicator active w-5 h-1 bg-grey-200"></div>
      <div class="indicator w-5 h-1 bg-grey-500"></div>
      <div class="indicator w-5 h-1 bg-grey-500"></div>
      <div class="indicator w-5 h-1 bg-grey-500"></div>
      <div class="indicator w-5 h-1 bg-grey-500"></div>
    </div>
  </div>
  <section class="relative h-fit overflow-hidden">
    <div class="next-button absolute h-full w-fit justify-end right-0 z-40">
      <button class="bg-black opacity-75 w-20"
        ><p class="lightIcon">angle-right</p>
      </button>
    </div>
    <div class="prev-button absolute h-full w-fit justify-end left-0 z-40">
      <button class="bg-black opacity-75 w-20"
        ><p class="lightIcon">angle-left</p>
      </button>
    </div>
    <div
      class="scroll noScrollbar carousel relative flex gap-4 overflow-x-scroll ease-linear duration-500"
    >
      {
        temaFiltret.map((film) => (
          <div class=" snap-start shrink-0 ">
            <MovieCard
              varighed={film.varighed}
              genre={film.genre}
              aarstal={film.aarstal}
              filmTitle={film.filmTitel}
              imgSrc={`../img/${film.imgTema}/${film.imgTitel}/imgCard.webp`}
              slug={film.slug}
              point={film.point}
            />
          </div>
        ))
      }
    </div>
  </section>
</section>
<script>
  // Hent pagineringsindikatorerne
  const indicators = document.querySelectorAll(
    ".indicator"
  ) as NodeListOf<HTMLElement>;

  // Lyt efter scroll-begivenheder i karrusellen
  document
    .querySelector(".scroll.carousel")
    .addEventListener("scroll", function () {
      // Beregn den aktuelle side baseret på scrollpositionen
      const scrollPosition = this.scrollLeft;
      const carouselWidth = this.offsetWidth;
      const currentPage = Math.floor(scrollPosition / carouselWidth);

      // Opdater farverne på pagineringsindikatorerne
      indicators.forEach((indicator, index) => {
        if (index === currentPage) {
          indicator.style.backgroundColor = "var(--active-color)";
        } else {
          indicator.style.backgroundColor = "var(--inactive-color)";
        }
      });
    });
</script>
<style>
  :root {
    --active-color: #cccccc; /* Aktiv farve */
    --inactive-color: #666666; /* Inaktiv farve */
  }
</style>
